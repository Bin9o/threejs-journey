"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Creates an array of arrays, ungrouping the elements in an array produced by zip.
 * @param arr
 */
var unzip = function (arr) {
    return arr.reduce(function (acc, val) { return (val.forEach(function (v, i) { return acc[i].push(v); }), acc); }, Array.from({
        length: Math.max.apply(Math, __spreadArray([], __read(arr.map(function (x) { return x.length; })))),
    }).map(function (x) { return []; }));
};
exports.default = unzip;
