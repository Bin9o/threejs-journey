"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Converts an array of objects to a CSV string that contains only the `columns` specified.
 *
 * @param {any[]} arr
 * @param {string[]} columns
 * @param {string} [delimiter=',']
 */
var JSONtoCSV = function (arr, columns, delimiter) {
    if (delimiter === void 0) { delimiter = ","; }
    return __spreadArray([
        columns.join(delimiter)
    ], __read(arr.map(function (obj) {
        return columns.reduce(function (acc, key) {
            return "" + acc + (!acc.length ? "" : delimiter) + "\"" + (!obj[key] ? "" : obj[key]) + "\"";
        }, "");
    }))).join("\n");
};
exports.default = JSONtoCSV;
